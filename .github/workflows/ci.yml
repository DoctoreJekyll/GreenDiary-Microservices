name: CI - test, build & push images

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  # 1. JOB CORREGIDO: Construye e instala el POM padre (plantas-micro) y todos los módulos locales.
  build-local-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven dependencies
        # Este paso restaura/guarda el repositorio .m2 para los jobs de 'test'
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # ➡️ PASO CLAVE: Instalar TODOS los artefactos locales.
      # Ejecutar 'mvn clean install' en la raíz instala el POM padre (plantas-micro:pom)
      # y common-lib:jar en el repositorio local (caché).
      - name: Install All Local SNAPSHOT dependencies (plantas-micro, common-lib)
        # Saltamos los tests aquí, ya que el job 'test' los ejecutará.
        run: mvn -B clean install -DskipTests=true

  # 2. JOB CORREGIDO: Ejecuta tests, confiando en el caché de Maven del job anterior.
  test:
    needs: build-local-dependencies # ⬅️ Depende del nuevo job de instalación
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "discovery-service", "gateway-service", "plant-service", "watering-service", "auth-service" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # ➡️ PASO CLAVE: Restaurar el caché. Contiene plantas-micro:pom y common-lib:jar.
      - name: Restore Maven repo cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # Se eliminan los 3 pasos de descarga/instalación manual que ya no son necesarios.

      - name: Run tests for service ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        # Ahora el servicio encontrará 'plantas-micro' y 'common-lib' en su repositorio local.
        run: mvn -B -f pom.xml clean verify

  # 3. JOB SIN CAMBIOS: Construye y empuja
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "discovery-service", "gateway-service", "plant-service", "watering-service", "auth-service" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU (for buildx)
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image for ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max